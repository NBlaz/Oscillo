ARM GAS  /tmp/cc97QTn8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvInsertTimerInActiveList:
  25              	.LFB18:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/cc97QTn8.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
ARM GAS  /tmp/cc97QTn8.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
ARM GAS  /tmp/cc97QTn8.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/cc97QTn8.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
ARM GAS  /tmp/cc97QTn8.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
ARM GAS  /tmp/cc97QTn8.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
ARM GAS  /tmp/cc97QTn8.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc97QTn8.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/cc97QTn8.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
ARM GAS  /tmp/cc97QTn8.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
ARM GAS  /tmp/cc97QTn8.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  27              		.loc 1 648 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
ARM GAS  /tmp/cc97QTn8.s 			page 13


 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  38              		.loc 1 651 0
  39 0002 4160     		str	r1, [r0, #4]
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  40              		.loc 1 652 0
  41 0004 0061     		str	r0, [r0, #16]
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  42              		.loc 1 654 0
  43 0006 9142     		cmp	r1, r2
  44 0008 0CD8     		bhi	.L2
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  45              		.loc 1 658 0
  46 000a D21A     		subs	r2, r2, r3
  47              	.LVL2:
  48 000c 8369     		ldr	r3, [r0, #24]
  49              	.LVL3:
  50 000e 9A42     		cmp	r2, r3
  51 0010 01D3     		bcc	.L8
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  52              		.loc 1 662 0
  53 0012 0120     		movs	r0, #1
  54              	.LVL4:
  55 0014 10E0     		b	.L1
  56              	.LVL5:
  57              	.L8:
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  58              		.loc 1 666 0
  59 0016 011D     		adds	r1, r0, #4
  60              	.LVL6:
  61 0018 094B     		ldr	r3, .L9
  62 001a 1868     		ldr	r0, [r3]
  63              	.LVL7:
  64 001c FFF7FEFF 		bl	vListInsert
  65              	.LVL8:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  66              		.loc 1 649 0
  67 0020 0020     		movs	r0, #0
  68 0022 09E0     		b	.L1
  69              	.LVL9:
  70              	.L2:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
ARM GAS  /tmp/cc97QTn8.s 			page 14


  71              		.loc 1 671 0
  72 0024 9A42     		cmp	r2, r3
  73 0026 01D2     		bcs	.L4
  74              		.loc 1 671 0 is_stmt 0 discriminator 1
  75 0028 9942     		cmp	r1, r3
  76 002a 06D2     		bcs	.L6
  77              	.L4:
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
  78              		.loc 1 680 0 is_stmt 1
  79 002c 011D     		adds	r1, r0, #4
  80              	.LVL10:
  81 002e 054B     		ldr	r3, .L9+4
  82              	.LVL11:
  83 0030 1868     		ldr	r0, [r3]
  84              	.LVL12:
  85 0032 FFF7FEFF 		bl	vListInsert
  86              	.LVL13:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  87              		.loc 1 649 0
  88 0036 0020     		movs	r0, #0
  89              	.LVL14:
  90              	.L1:
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  91              		.loc 1 685 0
  92 0038 08BD     		pop	{r3, pc}
  93              	.LVL15:
  94              	.L6:
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
  95              		.loc 1 676 0
  96 003a 0120     		movs	r0, #1
  97              	.LVL16:
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  98              		.loc 1 684 0
  99 003c FCE7     		b	.L1
 100              	.L10:
 101 003e 00BF     		.align	2
 102              	.L9:
 103 0040 00000000 		.word	.LANCHOR0
 104 0044 00000000 		.word	.LANCHOR1
 105              		.cfi_endproc
 106              	.LFE18:
 108              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
ARM GAS  /tmp/cc97QTn8.s 			page 15


 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	prvCheckForValidListAndQueue:
 116              	.LFB21:
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc97QTn8.s 			page 16


 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
ARM GAS  /tmp/cc97QTn8.s 			page 17


 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
ARM GAS  /tmp/cc97QTn8.s 			page 18


 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 117              		.loc 1 895 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 30B5     		push	{r4, r5, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 12
 124              		.cfi_offset 4, -12
 125              		.cfi_offset 5, -8
 126              		.cfi_offset 14, -4
 127 0002 83B0     		sub	sp, sp, #12
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 24
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
ARM GAS  /tmp/cc97QTn8.s 			page 19


 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 130              		.loc 1 899 0
 131 0004 FFF7FEFF 		bl	vPortEnterCritical
 132              	.LVL17:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 133              		.loc 1 901 0
 134 0008 114B     		ldr	r3, .L15
 135 000a 1B68     		ldr	r3, [r3]
 136 000c 1BB1     		cbz	r3, .L14
 137              	.L12:
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 138              		.loc 1 941 0
 139 000e FFF7FEFF 		bl	vPortExitCritical
 140              	.LVL18:
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
ARM GAS  /tmp/cc97QTn8.s 			page 20


 141              		.loc 1 942 0
 142 0012 03B0     		add	sp, sp, #12
 143              	.LCFI3:
 144              		.cfi_remember_state
 145              		.cfi_def_cfa_offset 12
 146              		@ sp needed
 147 0014 30BD     		pop	{r4, r5, pc}
 148              	.L14:
 149              	.LCFI4:
 150              		.cfi_restore_state
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 151              		.loc 1 903 0
 152 0016 0F4D     		ldr	r5, .L15+4
 153 0018 2846     		mov	r0, r5
 154 001a FFF7FEFF 		bl	vListInitialise
 155              	.LVL19:
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 156              		.loc 1 904 0
 157 001e 0E4C     		ldr	r4, .L15+8
 158 0020 2046     		mov	r0, r4
 159 0022 FFF7FEFF 		bl	vListInitialise
 160              	.LVL20:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 161              		.loc 1 905 0
 162 0026 0D4B     		ldr	r3, .L15+12
 163 0028 1D60     		str	r5, [r3]
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164              		.loc 1 906 0
 165 002a 0D4B     		ldr	r3, .L15+16
 166 002c 1C60     		str	r4, [r3]
 167              	.LBB41:
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 168              		.loc 1 915 0
 169 002e 0023     		movs	r3, #0
 170 0030 0093     		str	r3, [sp]
 171 0032 0C4B     		ldr	r3, .L15+20
 172 0034 0C4A     		ldr	r2, .L15+24
 173 0036 1021     		movs	r1, #16
 174 0038 0A20     		movs	r0, #10
 175 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 176              	.LVL21:
 177 003e 044B     		ldr	r3, .L15
 178 0040 1860     		str	r0, [r3]
 179              	.LBE41:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 180              		.loc 1 925 0
 181 0042 0028     		cmp	r0, #0
 182 0044 E3D0     		beq	.L12
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 183              		.loc 1 927 0
 184 0046 0949     		ldr	r1, .L15+28
 185 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 186              	.LVL22:
 187 004c DFE7     		b	.L12
 188              	.L16:
 189 004e 00BF     		.align	2
 190              	.L15:
ARM GAS  /tmp/cc97QTn8.s 			page 21


 191 0050 00000000 		.word	.LANCHOR2
 192 0054 00000000 		.word	.LANCHOR3
 193 0058 00000000 		.word	.LANCHOR4
 194 005c 00000000 		.word	.LANCHOR1
 195 0060 00000000 		.word	.LANCHOR0
 196 0064 00000000 		.word	.LANCHOR5
 197 0068 00000000 		.word	.LANCHOR6
 198 006c 00000000 		.word	.LC0
 199              		.cfi_endproc
 200              	.LFE21:
 202              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 203              		.align	1
 204              		.global	xTimerCreateTimerTask
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	xTimerCreateTimerTask:
 211              	.LFB4:
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 212              		.loc 1 224 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 16
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 10B5     		push	{r4, lr}
 217              	.LCFI5:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
 221 0002 88B0     		sub	sp, sp, #32
 222              	.LCFI6:
 223              		.cfi_def_cfa_offset 40
 224              	.LVL23:
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 225              		.loc 1 231 0
 226 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 227              	.LVL24:
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 228              		.loc 1 233 0
 229 0008 124B     		ldr	r3, .L23
 230 000a 1B68     		ldr	r3, [r3]
 231 000c CBB1     		cbz	r3, .L18
 232              	.LBB42:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 233              		.loc 1 237 0
 234 000e 0024     		movs	r4, #0
 235 0010 0594     		str	r4, [sp, #20]
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 236              		.loc 1 238 0
 237 0012 0694     		str	r4, [sp, #24]
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 238              		.loc 1 241 0
 239 0014 07AA     		add	r2, sp, #28
 240 0016 06A9     		add	r1, sp, #24
 241 0018 05A8     		add	r0, sp, #20
 242 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 243              	.LVL25:
ARM GAS  /tmp/cc97QTn8.s 			page 22


 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244              		.loc 1 242 0
 245 001e 059B     		ldr	r3, [sp, #20]
 246 0020 0293     		str	r3, [sp, #8]
 247 0022 069B     		ldr	r3, [sp, #24]
 248 0024 0193     		str	r3, [sp, #4]
 249 0026 0223     		movs	r3, #2
 250 0028 0093     		str	r3, [sp]
 251 002a 2346     		mov	r3, r4
 252 002c 079A     		ldr	r2, [sp, #28]
 253 002e 0A49     		ldr	r1, .L23+4
 254 0030 0A48     		ldr	r0, .L23+8
 255 0032 FFF7FEFF 		bl	xTaskCreateStatic
 256              	.LVL26:
 257 0036 0A4B     		ldr	r3, .L23+12
 258 0038 1860     		str	r0, [r3]
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 259              		.loc 1 250 0
 260 003a 10B1     		cbz	r0, .L18
 261              	.LBE42:
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 262              		.loc 1 273 0
 263 003c 0120     		movs	r0, #1
 264 003e 08B0     		add	sp, sp, #32
 265              	.LCFI7:
 266              		.cfi_remember_state
 267              		.cfi_def_cfa_offset 8
 268              		@ sp needed
 269 0040 10BD     		pop	{r4, pc}
 270              	.L18:
 271              	.LCFI8:
 272              		.cfi_restore_state
 273              	.LBB43:
 274              	.LBB44:
 275              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
ARM GAS  /tmp/cc97QTn8.s 			page 23


  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
ARM GAS  /tmp/cc97QTn8.s 			page 24


  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
ARM GAS  /tmp/cc97QTn8.s 			page 25


 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
ARM GAS  /tmp/cc97QTn8.s 			page 26


 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 276              		.loc 2 195 0
 277              		.syntax unified
 278              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 279 0042 4FF05003 			mov r3, #80												
 280 0046 83F31188 		msr basepri, r3											
 281 004a BFF36F8F 		isb														
 282 004e BFF34F8F 		dsb														
 283              	
 284              	@ 0 "" 2
 285              	.LVL27:
 286              		.thumb
 287              		.syntax unified
 288              	.L20:
 289 0052 FEE7     		b	.L20
 290              	.L24:
 291              		.align	2
 292              	.L23:
 293 0054 00000000 		.word	.LANCHOR2
 294 0058 00000000 		.word	.LC1
 295 005c 00000000 		.word	prvTimerTask
 296 0060 00000000 		.word	.LANCHOR7
 297              	.LBE44:
 298              	.LBE43:
 299              		.cfi_endproc
 300              	.LFE4:
 302              		.section	.text.xTimerCreate,"ax",%progbits
 303              		.align	1
 304              		.global	xTimerCreate
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	xTimerCreate:
 311              	.LFB5:
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 312              		.loc 1 283 0
 313              		.cfi_startproc
 314              		@ args = 4, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL28:
 317 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 318              	.LCFI9:
 319              		.cfi_def_cfa_offset 24
 320              		.cfi_offset 4, -24
 321              		.cfi_offset 5, -20
 322              		.cfi_offset 6, -16
 323              		.cfi_offset 7, -12
 324              		.cfi_offset 8, -8
 325              		.cfi_offset 14, -4
 326 0004 8046     		mov	r8, r0
 327 0006 0D46     		mov	r5, r1
 328 0008 1746     		mov	r7, r2
 329 000a 1E46     		mov	r6, r3
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 330              		.loc 1 286 0
ARM GAS  /tmp/cc97QTn8.s 			page 27


 331 000c 3020     		movs	r0, #48
 332              	.LVL29:
 333 000e FFF7FEFF 		bl	pvPortMalloc
 334              	.LVL30:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335              		.loc 1 288 0
 336 0012 0446     		mov	r4, r0
 337 0014 C0B1     		cbz	r0, .L25
 338              	.LVL31:
 339              	.LBB49:
 340              	.LBB50:
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 341              		.loc 1 360 0
 342 0016 45B9     		cbnz	r5, .L27
 343              	.LBB51:
 344              	.LBB52:
 345              		.loc 2 195 0
 346              		.syntax unified
 347              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 348 0018 4FF05003 			mov r3, #80												
 349 001c 83F31188 		msr basepri, r3											
 350 0020 BFF36F8F 		isb														
 351 0024 BFF34F8F 		dsb														
 352              	
 353              	@ 0 "" 2
 354              	.LVL32:
 355              		.thumb
 356              		.syntax unified
 357              	.L28:
 358 0028 FEE7     		b	.L28
 359              	.L27:
 360              	.LBE52:
 361              	.LBE51:
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362              		.loc 1 366 0
 363 002a FFF7FEFF 		bl	prvCheckForValidListAndQueue
 364              	.LVL33:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 365              		.loc 1 370 0
 366 002e C4F80080 		str	r8, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 367              		.loc 1 371 0
 368 0032 A561     		str	r5, [r4, #24]
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 369              		.loc 1 372 0
 370 0034 E761     		str	r7, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371              		.loc 1 373 0
 372 0036 2662     		str	r6, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 373              		.loc 1 374 0
 374 0038 069B     		ldr	r3, [sp, #24]
 375 003a 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 376              		.loc 1 375 0
 377 003c 201D     		adds	r0, r4, #4
 378 003e FFF7FEFF 		bl	vListInitialiseItem
ARM GAS  /tmp/cc97QTn8.s 			page 28


 379              	.LVL34:
 380              	.LBE50:
 381              	.LBE49:
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 382              		.loc 1 297 0
 383 0042 0023     		movs	r3, #0
 384 0044 84F82C30 		strb	r3, [r4, #44]
 385              	.L25:
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386              		.loc 1 303 0
 387 0048 2046     		mov	r0, r4
 388 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 389              		.cfi_endproc
 390              	.LFE5:
 392              		.section	.text.xTimerCreateStatic,"ax",%progbits
 393              		.align	1
 394              		.global	xTimerCreateStatic
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	xTimerCreateStatic:
 401              	.LFB6:
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 402              		.loc 1 316 0
 403              		.cfi_startproc
 404              		@ args = 8, pretend = 0, frame = 8
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL35:
 407 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 408              	.LCFI10:
 409              		.cfi_def_cfa_offset 24
 410              		.cfi_offset 4, -24
 411              		.cfi_offset 5, -20
 412              		.cfi_offset 6, -16
 413              		.cfi_offset 7, -12
 414              		.cfi_offset 8, -8
 415              		.cfi_offset 14, -4
 416 0004 82B0     		sub	sp, sp, #8
 417              	.LCFI11:
 418              		.cfi_def_cfa_offset 32
 419 0006 099C     		ldr	r4, [sp, #36]
 420              	.LBB62:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 421              		.loc 1 324 0
 422 0008 3025     		movs	r5, #48
 423 000a 0195     		str	r5, [sp, #4]
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 424              		.loc 1 325 0
 425 000c 019D     		ldr	r5, [sp, #4]
 426 000e 302D     		cmp	r5, #48
 427 0010 08D0     		beq	.L31
 428              	.LBB63:
 429              	.LBB64:
 430              		.loc 2 195 0
 431              		.syntax unified
 432              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/cc97QTn8.s 			page 29


 433 0012 4FF05003 			mov r3, #80												
 434 0016 83F31188 		msr basepri, r3											
 435 001a BFF36F8F 		isb														
 436 001e BFF34F8F 		dsb														
 437              	
 438              	@ 0 "" 2
 439              	.LVL36:
 440              		.thumb
 441              		.syntax unified
 442              	.L32:
 443 0022 FEE7     		b	.L32
 444              	.LVL37:
 445              	.L31:
 446              	.LBE64:
 447              	.LBE63:
 448              	.LBE62:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 449              		.loc 1 330 0
 450 0024 44B9     		cbnz	r4, .L33
 451              	.LBB65:
 452              	.LBB66:
 453              		.loc 2 195 0
 454              		.syntax unified
 455              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 456 0026 4FF05003 			mov r3, #80												
 457 002a 83F31188 		msr basepri, r3											
 458 002e BFF36F8F 		isb														
 459 0032 BFF34F8F 		dsb														
 460              	
 461              	@ 0 "" 2
 462              	.LVL38:
 463              		.thumb
 464              		.syntax unified
 465              	.L34:
 466 0036 FEE7     		b	.L34
 467              	.LVL39:
 468              	.L33:
 469              	.LBE66:
 470              	.LBE65:
 471              	.LBB67:
 472              	.LBB68:
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 473              		.loc 1 360 0
 474 0038 41B9     		cbnz	r1, .L35
 475              	.LBB69:
 476              	.LBB70:
 477              		.loc 2 195 0
 478              		.syntax unified
 479              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 480 003a 4FF05003 			mov r3, #80												
 481 003e 83F31188 		msr basepri, r3											
 482 0042 BFF36F8F 		isb														
 483 0046 BFF34F8F 		dsb														
 484              	
 485              	@ 0 "" 2
 486              	.LVL40:
 487              		.thumb
ARM GAS  /tmp/cc97QTn8.s 			page 30


 488              		.syntax unified
 489              	.L36:
 490 004a FEE7     		b	.L36
 491              	.LVL41:
 492              	.L35:
 493 004c 1E46     		mov	r6, r3
 494 004e 1746     		mov	r7, r2
 495 0050 0D46     		mov	r5, r1
 496 0052 8046     		mov	r8, r0
 497              	.LBE70:
 498              	.LBE69:
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 499              		.loc 1 366 0
 500 0054 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 501              	.LVL42:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 502              		.loc 1 370 0
 503 0058 C4F80080 		str	r8, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 504              		.loc 1 371 0
 505 005c A561     		str	r5, [r4, #24]
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 506              		.loc 1 372 0
 507 005e E761     		str	r7, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 508              		.loc 1 373 0
 509 0060 2662     		str	r6, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 510              		.loc 1 374 0
 511 0062 089B     		ldr	r3, [sp, #32]
 512 0064 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 513              		.loc 1 375 0
 514 0066 201D     		adds	r0, r4, #4
 515 0068 FFF7FEFF 		bl	vListInitialiseItem
 516              	.LVL43:
 517              	.LBE68:
 518              	.LBE67:
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 519              		.loc 1 341 0
 520 006c 0123     		movs	r3, #1
 521 006e 84F82C30 		strb	r3, [r4, #44]
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522              		.loc 1 347 0
 523 0072 2046     		mov	r0, r4
 524 0074 02B0     		add	sp, sp, #8
 525              	.LCFI12:
 526              		.cfi_def_cfa_offset 24
 527              		@ sp needed
 528 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 529              		.cfi_endproc
 530              	.LFE6:
 532              		.section	.text.xTimerGenericCommand,"ax",%progbits
 533              		.align	1
 534              		.global	xTimerGenericCommand
 535              		.syntax unified
 536              		.thumb
ARM GAS  /tmp/cc97QTn8.s 			page 31


 537              		.thumb_func
 538              		.fpu fpv4-sp-d16
 540              	xTimerGenericCommand:
 541              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 542              		.loc 1 382 0
 543              		.cfi_startproc
 544              		@ args = 4, pretend = 0, frame = 16
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              	.LVL44:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 547              		.loc 1 386 0
 548 0000 D8B1     		cbz	r0, .L47
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 549              		.loc 1 382 0
 550 0002 30B5     		push	{r4, r5, lr}
 551              	.LCFI13:
 552              		.cfi_def_cfa_offset 12
 553              		.cfi_offset 4, -12
 554              		.cfi_offset 5, -8
 555              		.cfi_offset 14, -4
 556 0004 85B0     		sub	sp, sp, #20
 557              	.LCFI14:
 558              		.cfi_def_cfa_offset 32
 559 0006 1546     		mov	r5, r2
 560 0008 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 561              		.loc 1 390 0
 562 000a 144A     		ldr	r2, .L48
 563              	.LVL45:
 564 000c 1068     		ldr	r0, [r2]
 565              	.LVL46:
 566 000e 10B3     		cbz	r0, .L44
 567 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 568              		.loc 1 393 0
 569 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 570              		.loc 1 394 0
 571 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 572              		.loc 1 395 0
 573 0016 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 574              		.loc 1 397 0
 575 0018 0529     		cmp	r1, #5
 576 001a 17DC     		bgt	.L42
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 577              		.loc 1 399 0
 578 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 579              	.LVL47:
 580 0020 0228     		cmp	r0, #2
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 581              		.loc 1 401 0
 582 0022 4FF00003 		mov	r3, #0
 583 0026 0CBF     		ite	eq
 584 0028 089A     		ldreq	r2, [sp, #32]
ARM GAS  /tmp/cc97QTn8.s 			page 32


 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 585              		.loc 1 405 0
 586 002a 1A46     		movne	r2, r3
 587 002c 6946     		mov	r1, sp
 588 002e 0B48     		ldr	r0, .L48
 589 0030 0068     		ldr	r0, [r0]
 590 0032 FFF7FEFF 		bl	xQueueGenericSend
 591              	.LVL48:
 592              	.L38:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 593              		.loc 1 421 0
 594 0036 05B0     		add	sp, sp, #20
 595              	.LCFI15:
 596              		.cfi_def_cfa_offset 12
 597              		@ sp needed
 598 0038 30BD     		pop	{r4, r5, pc}
 599              	.LVL49:
 600              	.L47:
 601              	.LCFI16:
 602              		.cfi_def_cfa_offset 0
 603              		.cfi_restore 4
 604              		.cfi_restore 5
 605              		.cfi_restore 14
 606              	.LBB71:
 607              	.LBB72:
 608              		.loc 2 195 0
 609              		.syntax unified
 610              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 611 003a 4FF05003 			mov r3, #80												
 612 003e 83F31188 		msr basepri, r3											
 613 0042 BFF36F8F 		isb														
 614 0046 BFF34F8F 		dsb														
 615              	
 616              	@ 0 "" 2
 617              	.LVL50:
 618              		.thumb
 619              		.syntax unified
 620              	.L40:
 621 004a FEE7     		b	.L40
 622              	.LVL51:
 623              	.L42:
 624              	.LCFI17:
 625              		.cfi_def_cfa_offset 32
 626              		.cfi_offset 4, -12
 627              		.cfi_offset 5, -8
 628              		.cfi_offset 14, -4
 629              	.LBE72:
 630              	.LBE71:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 631              		.loc 1 410 0
 632 004c 0023     		movs	r3, #0
 633 004e 6946     		mov	r1, sp
 634              	.LVL52:
 635 0050 FFF7FEFF 		bl	xQueueGenericSendFromISR
 636              	.LVL53:
 637 0054 EFE7     		b	.L38
 638              	.LVL54:
ARM GAS  /tmp/cc97QTn8.s 			page 33


 639              	.L44:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 640              		.loc 1 383 0
 641 0056 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 642              		.loc 1 420 0
 643 0058 EDE7     		b	.L38
 644              	.L49:
 645 005a 00BF     		.align	2
 646              	.L48:
 647 005c 00000000 		.word	.LANCHOR2
 648              		.cfi_endproc
 649              	.LFE8:
 651              		.section	.text.prvSampleTimeNow,"ax",%progbits
 652              		.align	1
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv4-sp-d16
 658              	prvSampleTimeNow:
 659              	.LFB17:
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 660              		.loc 1 625 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              	.LVL55:
 665 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 666              	.LCFI18:
 667              		.cfi_def_cfa_offset 32
 668              		.cfi_offset 4, -32
 669              		.cfi_offset 5, -28
 670              		.cfi_offset 6, -24
 671              		.cfi_offset 7, -20
 672              		.cfi_offset 8, -16
 673              		.cfi_offset 9, -12
 674              		.cfi_offset 10, -8
 675              		.cfi_offset 14, -4
 676 0004 82B0     		sub	sp, sp, #8
 677              	.LCFI19:
 678              		.cfi_def_cfa_offset 40
 679 0006 0746     		mov	r7, r0
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 680              		.loc 1 629 0
 681 0008 FFF7FEFF 		bl	xTaskGetTickCount
 682              	.LVL56:
 683 000c 0646     		mov	r6, r0
 684              	.LVL57:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 685              		.loc 1 631 0
 686 000e 234B     		ldr	r3, .L65
 687 0010 1B68     		ldr	r3, [r3]
 688 0012 8342     		cmp	r3, r0
 689 0014 07D8     		bhi	.L63
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 690              		.loc 1 638 0
 691 0016 0023     		movs	r3, #0
ARM GAS  /tmp/cc97QTn8.s 			page 34


 692 0018 3B60     		str	r3, [r7]
 693              	.LVL58:
 694              	.L58:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695              		.loc 1 641 0
 696 001a 204B     		ldr	r3, .L65
 697 001c 1E60     		str	r6, [r3]
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 698              		.loc 1 644 0
 699 001e 3046     		mov	r0, r6
 700 0020 02B0     		add	sp, sp, #8
 701              	.LCFI20:
 702              		.cfi_remember_state
 703              		.cfi_def_cfa_offset 32
 704              		@ sp needed
 705 0022 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 706              	.LVL59:
 707              	.L63:
 708              	.LCFI21:
 709              		.cfi_restore_state
 710              	.LBB77:
 711              	.LBB78:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 712              		.loc 1 846 0
 713 0026 1E4D     		ldr	r5, .L65+4
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 714              		.loc 1 877 0
 715 0028 4FF00008 		mov	r8, #0
 716              	.LVL60:
 717              	.L53:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 718              		.loc 1 846 0
 719 002c 2B68     		ldr	r3, [r5]
 720 002e 1A68     		ldr	r2, [r3]
 721 0030 62B3     		cbz	r2, .L64
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 722              		.loc 1 848 0
 723 0032 DB68     		ldr	r3, [r3, #12]
 724 0034 D3F800A0 		ldr	r10, [r3]
 725              	.LVL61:
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 726              		.loc 1 851 0
 727 0038 DC68     		ldr	r4, [r3, #12]
 728              	.LVL62:
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 729              		.loc 1 852 0
 730 003a 04F10409 		add	r9, r4, #4
 731 003e 4846     		mov	r0, r9
 732 0040 FFF7FEFF 		bl	uxListRemove
 733              	.LVL63:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 734              		.loc 1 858 0
 735 0044 636A     		ldr	r3, [r4, #36]
 736 0046 2046     		mov	r0, r4
 737 0048 9847     		blx	r3
 738              	.LVL64:
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/cc97QTn8.s 			page 35


 739              		.loc 1 860 0
 740 004a E369     		ldr	r3, [r4, #28]
 741 004c 012B     		cmp	r3, #1
 742 004e EDD1     		bne	.L53
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 743              		.loc 1 868 0
 744 0050 A369     		ldr	r3, [r4, #24]
 745 0052 5344     		add	r3, r3, r10
 746              	.LVL65:
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 747              		.loc 1 869 0
 748 0054 9A45     		cmp	r10, r3
 749 0056 06D2     		bcs	.L54
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 750              		.loc 1 871 0
 751 0058 6360     		str	r3, [r4, #4]
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 752              		.loc 1 872 0
 753 005a 2461     		str	r4, [r4, #16]
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 754              		.loc 1 873 0
 755 005c 4946     		mov	r1, r9
 756 005e 2868     		ldr	r0, [r5]
 757 0060 FFF7FEFF 		bl	vListInsert
 758              	.LVL66:
 759 0064 E2E7     		b	.L53
 760              	.LVL67:
 761              	.L54:
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 762              		.loc 1 877 0
 763 0066 CDF80080 		str	r8, [sp]
 764 006a 4346     		mov	r3, r8
 765              	.LVL68:
 766 006c 5246     		mov	r2, r10
 767 006e 4146     		mov	r1, r8
 768 0070 2046     		mov	r0, r4
 769 0072 FFF7FEFF 		bl	xTimerGenericCommand
 770              	.LVL69:
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 771              		.loc 1 878 0
 772 0076 0028     		cmp	r0, #0
 773 0078 D8D1     		bne	.L53
 774              	.LBB79:
 775              	.LBB80:
 776              		.loc 2 195 0
 777              		.syntax unified
 778              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 779 007a 4FF05003 			mov r3, #80												
 780 007e 83F31188 		msr basepri, r3											
 781 0082 BFF36F8F 		isb														
 782 0086 BFF34F8F 		dsb														
 783              	
 784              	@ 0 "" 2
 785              	.LVL70:
 786              		.thumb
 787              		.syntax unified
 788              	.L56:
ARM GAS  /tmp/cc97QTn8.s 			page 36


 789 008a FEE7     		b	.L56
 790              	.LVL71:
 791              	.L64:
 792              	.LBE80:
 793              	.LBE79:
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 794              		.loc 1 889 0
 795 008c 054A     		ldr	r2, .L65+8
 796 008e 1068     		ldr	r0, [r2]
 797 0090 0349     		ldr	r1, .L65+4
 798 0092 0860     		str	r0, [r1]
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 799              		.loc 1 890 0
 800 0094 1360     		str	r3, [r2]
 801              	.LBE78:
 802              	.LBE77:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 803              		.loc 1 634 0
 804 0096 0123     		movs	r3, #1
 805              	.LVL72:
 806 0098 3B60     		str	r3, [r7]
 807 009a BEE7     		b	.L58
 808              	.L66:
 809              		.align	2
 810              	.L65:
 811 009c 00000000 		.word	.LANCHOR8
 812 00a0 00000000 		.word	.LANCHOR1
 813 00a4 00000000 		.word	.LANCHOR0
 814              		.cfi_endproc
 815              	.LFE17:
 817              		.section	.text.prvTimerTask,"ax",%progbits
 818              		.align	1
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu fpv4-sp-d16
 824              	prvTimerTask:
 825              	.LFB14:
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 826              		.loc 1 503 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 24
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              	.LVL73:
 831 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 832              	.LCFI22:
 833              		.cfi_def_cfa_offset 28
 834              		.cfi_offset 4, -28
 835              		.cfi_offset 5, -24
 836              		.cfi_offset 6, -20
 837              		.cfi_offset 7, -16
 838              		.cfi_offset 8, -12
 839              		.cfi_offset 9, -8
 840              		.cfi_offset 14, -4
 841 0004 89B0     		sub	sp, sp, #36
 842              	.LCFI23:
 843              		.cfi_def_cfa_offset 64
ARM GAS  /tmp/cc97QTn8.s 			page 37


 844              	.LBB96:
 845              	.LBB97:
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 846              		.loc 1 609 0
 847 0006 6E4F     		ldr	r7, .L95
 848              	.LBE97:
 849              	.LBE96:
 850              	.LBB99:
 851              	.LBB100:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 852              		.loc 1 574 0
 853 0008 6E4D     		ldr	r5, .L95+4
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 854              		.loc 1 582 0
 855 000a DFF8C081 		ldr	r8, .L95+12
 856              	.LVL74:
 857              	.L88:
 858              	.LBE100:
 859              	.LBE99:
 860              	.LBB106:
 861              	.LBB98:
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 862              		.loc 1 609 0 discriminator 1
 863 000e 3B68     		ldr	r3, [r7]
 864 0010 1A68     		ldr	r2, [r3]
 865              	.LVL75:
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 866              		.loc 1 610 0 discriminator 1
 867 0012 72B1     		cbz	r2, .L68
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 868              		.loc 1 612 0
 869 0014 DB68     		ldr	r3, [r3, #12]
 870 0016 1C68     		ldr	r4, [r3]
 871              	.LVL76:
 872              	.LBE98:
 873              	.LBE106:
 874              	.LBB107:
 875              	.LBB105:
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 876              		.loc 1 543 0
 877 0018 FFF7FEFF 		bl	vTaskSuspendAll
 878              	.LVL77:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 879              		.loc 1 550 0
 880 001c 04A8     		add	r0, sp, #16
 881 001e FFF7FEFF 		bl	prvSampleTimeNow
 882              	.LVL78:
 883 0022 0646     		mov	r6, r0
 884              	.LVL79:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 885              		.loc 1 551 0
 886 0024 049B     		ldr	r3, [sp, #16]
 887 0026 002B     		cmp	r3, #0
 888 0028 53D1     		bne	.L70
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 889              		.loc 1 554 0
 890 002a 8442     		cmp	r4, r0
ARM GAS  /tmp/cc97QTn8.s 			page 38


 891 002c 22D9     		bls	.L89
 892 002e 0022     		movs	r2, #0
 893 0030 0FE0     		b	.L90
 894              	.LVL80:
 895              	.L68:
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 896              		.loc 1 543 0
 897 0032 FFF7FEFF 		bl	vTaskSuspendAll
 898              	.LVL81:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 899              		.loc 1 550 0
 900 0036 04A8     		add	r0, sp, #16
 901 0038 FFF7FEFF 		bl	prvSampleTimeNow
 902              	.LVL82:
 903 003c 0646     		mov	r6, r0
 904              	.LVL83:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 905              		.loc 1 551 0
 906 003e 049B     		ldr	r3, [sp, #16]
 907 0040 002B     		cmp	r3, #0
 908 0042 46D1     		bne	.L70
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 909              		.loc 1 571 0
 910 0044 604B     		ldr	r3, .L95+8
 911 0046 1B68     		ldr	r3, [r3]
 912 0048 1A68     		ldr	r2, [r3]
 913 004a B2FA82F2 		clz	r2, r2
 914 004e 5209     		lsrs	r2, r2, #5
 915              	.LVL84:
 916 0050 0024     		movs	r4, #0
 917              	.LVL85:
 918              	.L90:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 919              		.loc 1 574 0
 920 0052 A11B     		subs	r1, r4, r6
 921 0054 2868     		ldr	r0, [r5]
 922              	.LVL86:
 923 0056 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 924              	.LVL87:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 925              		.loc 1 576 0
 926 005a FFF7FEFF 		bl	xTaskResumeAll
 927              	.LVL88:
 928 005e 0028     		cmp	r0, #0
 929 0060 39D1     		bne	.L74
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 930              		.loc 1 582 0
 931 0062 4FF08053 		mov	r3, #268435456
 932 0066 C8F80030 		str	r3, [r8]
 933              		.syntax unified
 934              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 935 006a BFF34F8F 		dsb
 936              	@ 0 "" 2
 937              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 938 006e BFF36F8F 		isb
 939              	@ 0 "" 2
 940              		.thumb
ARM GAS  /tmp/cc97QTn8.s 			page 39


 941              		.syntax unified
 942 0072 30E0     		b	.L74
 943              	.LVL89:
 944              	.L89:
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 945              		.loc 1 556 0
 946 0074 FFF7FEFF 		bl	xTaskResumeAll
 947              	.LVL90:
 948              	.LBB101:
 949              	.LBB102:
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950              		.loc 1 465 0
 951 0078 3B68     		ldr	r3, [r7]
 952 007a DB68     		ldr	r3, [r3, #12]
 953 007c D3F80C90 		ldr	r9, [r3, #12]
 954              	.LVL91:
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 955              		.loc 1 469 0
 956 0080 09F10400 		add	r0, r9, #4
 957 0084 FFF7FEFF 		bl	uxListRemove
 958              	.LVL92:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 959              		.loc 1 474 0
 960 0088 D9F81C30 		ldr	r3, [r9, #28]
 961 008c 012B     		cmp	r3, #1
 962 008e 04D0     		beq	.L93
 963              	.L72:
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 964              		.loc 1 498 0
 965 0090 D9F82430 		ldr	r3, [r9, #36]
 966 0094 4846     		mov	r0, r9
 967 0096 9847     		blx	r3
 968              	.LVL93:
 969 0098 1DE0     		b	.L74
 970              	.L93:
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 971              		.loc 1 479 0
 972 009a D9F81810 		ldr	r1, [r9, #24]
 973 009e 2346     		mov	r3, r4
 974 00a0 3246     		mov	r2, r6
 975 00a2 2144     		add	r1, r1, r4
 976 00a4 4846     		mov	r0, r9
 977 00a6 FFF7FEFF 		bl	prvInsertTimerInActiveList
 978              	.LVL94:
 979 00aa 0028     		cmp	r0, #0
 980 00ac F0D0     		beq	.L72
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 981              		.loc 1 483 0
 982 00ae 0021     		movs	r1, #0
 983 00b0 0091     		str	r1, [sp]
 984 00b2 0B46     		mov	r3, r1
 985 00b4 2246     		mov	r2, r4
 986 00b6 4846     		mov	r0, r9
 987 00b8 FFF7FEFF 		bl	xTimerGenericCommand
 988              	.LVL95:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 989              		.loc 1 484 0
ARM GAS  /tmp/cc97QTn8.s 			page 40


 990 00bc 0028     		cmp	r0, #0
 991 00be E7D1     		bne	.L72
 992              	.LBB103:
 993              	.LBB104:
 994              		.loc 2 195 0
 995              		.syntax unified
 996              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 997 00c0 4FF05003 			mov r3, #80												
 998 00c4 83F31188 		msr basepri, r3											
 999 00c8 BFF36F8F 		isb														
 1000 00cc BFF34F8F 		dsb														
 1001              	
 1002              	@ 0 "" 2
 1003              	.LVL96:
 1004              		.thumb
 1005              		.syntax unified
 1006              	.L73:
 1007 00d0 FEE7     		b	.L73
 1008              	.LVL97:
 1009              	.L70:
 1010              	.LBE104:
 1011              	.LBE103:
 1012              	.LBE102:
 1013              	.LBE101:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1014              		.loc 1 592 0
 1015 00d2 FFF7FEFF 		bl	xTaskResumeAll
 1016              	.LVL98:
 1017              	.L74:
 1018              	.LBE105:
 1019              	.LBE107:
 1020              	.LBB108:
 1021              	.LBB109:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1022              		.loc 1 695 0
 1023 00d6 0024     		movs	r4, #0
 1024              	.LVL99:
 1025              	.L77:
 1026 00d8 2246     		mov	r2, r4
 1027 00da 04A9     		add	r1, sp, #16
 1028 00dc 2868     		ldr	r0, [r5]
 1029 00de FFF7FEFF 		bl	xQueueReceive
 1030              	.LVL100:
 1031 00e2 0028     		cmp	r0, #0
 1032 00e4 93D0     		beq	.L88
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1033              		.loc 1 701 0
 1034 00e6 049B     		ldr	r3, [sp, #16]
 1035 00e8 002B     		cmp	r3, #0
 1036 00ea 06DA     		bge	.L76
 1037              	.LVL101:
 1038              	.LBB110:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1039              		.loc 1 710 0
 1040 00ec 0799     		ldr	r1, [sp, #28]
 1041 00ee 0698     		ldr	r0, [sp, #24]
 1042 00f0 059B     		ldr	r3, [sp, #20]
ARM GAS  /tmp/cc97QTn8.s 			page 41


 1043 00f2 9847     		blx	r3
 1044              	.LVL102:
 1045              	.LBE110:
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1046              		.loc 1 721 0
 1047 00f4 049B     		ldr	r3, [sp, #16]
 1048 00f6 002B     		cmp	r3, #0
 1049 00f8 EEDB     		blt	.L77
 1050              	.LVL103:
 1051              	.L76:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1052              		.loc 1 725 0
 1053 00fa 069E     		ldr	r6, [sp, #24]
 1054              	.LVL104:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1055              		.loc 1 727 0
 1056 00fc 7369     		ldr	r3, [r6, #20]
 1057 00fe 13B1     		cbz	r3, .L78
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1058              		.loc 1 730 0
 1059 0100 301D     		adds	r0, r6, #4
 1060 0102 FFF7FEFF 		bl	uxListRemove
 1061              	.LVL105:
 1062              	.L78:
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1063              		.loc 1 745 0
 1064 0106 03A8     		add	r0, sp, #12
 1065 0108 FFF7FEFF 		bl	prvSampleTimeNow
 1066              	.LVL106:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1067              		.loc 1 747 0
 1068 010c 049B     		ldr	r3, [sp, #16]
 1069 010e 092B     		cmp	r3, #9
 1070 0110 E2D8     		bhi	.L77
 1071 0112 01A2     		adr	r2, .L81
 1072 0114 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1073              		.p2align 2
 1074              	.L81:
 1075 0118 41010000 		.word	.L80+1
 1076 011c 41010000 		.word	.L80+1
 1077 0120 41010000 		.word	.L80+1
 1078 0124 D9000000 		.word	.L77+1
 1079 0128 89010000 		.word	.L82+1
 1080 012c AF010000 		.word	.L83+1
 1081 0130 41010000 		.word	.L80+1
 1082 0134 41010000 		.word	.L80+1
 1083 0138 D9000000 		.word	.L77+1
 1084 013c 89010000 		.word	.L82+1
 1085              		.p2align 1
 1086              	.L80:
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1087              		.loc 1 755 0
 1088 0140 0599     		ldr	r1, [sp, #20]
 1089 0142 0B46     		mov	r3, r1
 1090 0144 0246     		mov	r2, r0
 1091 0146 B069     		ldr	r0, [r6, #24]
 1092              	.LVL107:
ARM GAS  /tmp/cc97QTn8.s 			page 42


 1093 0148 0144     		add	r1, r1, r0
 1094 014a 3046     		mov	r0, r6
 1095 014c FFF7FEFF 		bl	prvInsertTimerInActiveList
 1096              	.LVL108:
 1097 0150 0028     		cmp	r0, #0
 1098 0152 C1D0     		beq	.L77
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1099              		.loc 1 759 0
 1100 0154 736A     		ldr	r3, [r6, #36]
 1101 0156 3046     		mov	r0, r6
 1102 0158 9847     		blx	r3
 1103              	.LVL109:
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1104              		.loc 1 762 0
 1105 015a F369     		ldr	r3, [r6, #28]
 1106 015c 012B     		cmp	r3, #1
 1107 015e BBD1     		bne	.L77
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1108              		.loc 1 764 0
 1109 0160 B269     		ldr	r2, [r6, #24]
 1110 0162 0094     		str	r4, [sp]
 1111 0164 2346     		mov	r3, r4
 1112 0166 0599     		ldr	r1, [sp, #20]
 1113 0168 0A44     		add	r2, r2, r1
 1114 016a 2146     		mov	r1, r4
 1115 016c 3046     		mov	r0, r6
 1116 016e FFF7FEFF 		bl	xTimerGenericCommand
 1117              	.LVL110:
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1118              		.loc 1 765 0
 1119 0172 0028     		cmp	r0, #0
 1120 0174 B0D1     		bne	.L77
 1121              	.LBB111:
 1122              	.LBB112:
 1123              		.loc 2 195 0
 1124              		.syntax unified
 1125              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1126 0176 4FF05003 			mov r3, #80												
 1127 017a 83F31188 		msr basepri, r3											
 1128 017e BFF36F8F 		isb														
 1129 0182 BFF34F8F 		dsb														
 1130              	
 1131              	@ 0 "" 2
 1132              	.LVL111:
 1133              		.thumb
 1134              		.syntax unified
 1135              	.L84:
 1136 0186 FEE7     		b	.L84
 1137              	.LVL112:
 1138              	.L82:
 1139              	.LBE112:
 1140              	.LBE111:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1141              		.loc 1 787 0
 1142 0188 0599     		ldr	r1, [sp, #20]
 1143 018a B161     		str	r1, [r6, #24]
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cc97QTn8.s 			page 43


 1144              		.loc 1 788 0
 1145 018c 31B1     		cbz	r1, .L94
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1146              		.loc 1 796 0
 1147 018e 0346     		mov	r3, r0
 1148 0190 0246     		mov	r2, r0
 1149 0192 0144     		add	r1, r1, r0
 1150 0194 3046     		mov	r0, r6
 1151              	.LVL113:
 1152 0196 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1153              	.LVL114:
 1154 019a 9DE7     		b	.L77
 1155              	.LVL115:
 1156              	.L94:
 1157              	.LBB113:
 1158              	.LBB114:
 1159              		.loc 2 195 0
 1160              		.syntax unified
 1161              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1162 019c 4FF05003 			mov r3, #80												
 1163 01a0 83F31188 		msr basepri, r3											
 1164 01a4 BFF36F8F 		isb														
 1165 01a8 BFF34F8F 		dsb														
 1166              	
 1167              	@ 0 "" 2
 1168              	.LVL116:
 1169              		.thumb
 1170              		.syntax unified
 1171              	.L86:
 1172 01ac FEE7     		b	.L86
 1173              	.L83:
 1174              	.LBE114:
 1175              	.LBE113:
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1176              		.loc 1 814 0
 1177 01ae 96F82C30 		ldrb	r3, [r6, #44]	@ zero_extendqisi2
 1178 01b2 002B     		cmp	r3, #0
 1179 01b4 90D1     		bne	.L77
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1180              		.loc 1 816 0
 1181 01b6 3046     		mov	r0, r6
 1182              	.LVL117:
 1183 01b8 FFF7FEFF 		bl	vPortFree
 1184              	.LVL118:
 1185 01bc 8CE7     		b	.L77
 1186              	.L96:
 1187 01be 00BF     		.align	2
 1188              	.L95:
 1189 01c0 00000000 		.word	.LANCHOR1
 1190 01c4 00000000 		.word	.LANCHOR2
 1191 01c8 00000000 		.word	.LANCHOR0
 1192 01cc 04ED00E0 		.word	-536810236
 1193              	.LBE109:
 1194              	.LBE108:
 1195              		.cfi_endproc
 1196              	.LFE14:
 1198              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
ARM GAS  /tmp/cc97QTn8.s 			page 44


 1199              		.align	1
 1200              		.global	xTimerGetTimerDaemonTaskHandle
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1204              		.fpu fpv4-sp-d16
 1206              	xTimerGetTimerDaemonTaskHandle:
 1207              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1208              		.loc 1 425 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1213              		.loc 1 428 0
 1214 0000 064B     		ldr	r3, .L101
 1215 0002 1868     		ldr	r0, [r3]
 1216 0004 00B1     		cbz	r0, .L100
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1217              		.loc 1 430 0
 1218 0006 7047     		bx	lr
 1219              	.L100:
 1220              	.LBB115:
 1221              	.LBB116:
 1222              		.loc 2 195 0
 1223              		.syntax unified
 1224              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1225 0008 4FF05003 			mov r3, #80												
 1226 000c 83F31188 		msr basepri, r3											
 1227 0010 BFF36F8F 		isb														
 1228 0014 BFF34F8F 		dsb														
 1229              	
 1230              	@ 0 "" 2
 1231              	.LVL119:
 1232              		.thumb
 1233              		.syntax unified
 1234              	.L99:
 1235 0018 FEE7     		b	.L99
 1236              	.L102:
 1237 001a 00BF     		.align	2
 1238              	.L101:
 1239 001c 00000000 		.word	.LANCHOR7
 1240              	.LBE116:
 1241              	.LBE115:
 1242              		.cfi_endproc
 1243              	.LFE9:
 1245              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1246              		.align	1
 1247              		.global	xTimerGetPeriod
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1251              		.fpu fpv4-sp-d16
 1253              	xTimerGetPeriod:
 1254              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
ARM GAS  /tmp/cc97QTn8.s 			page 45


 1255              		.loc 1 434 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260              	.LVL120:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1261              		.loc 1 437 0
 1262 0000 08B1     		cbz	r0, .L106
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1263              		.loc 1 439 0
 1264 0002 8069     		ldr	r0, [r0, #24]
 1265              	.LVL121:
 1266 0004 7047     		bx	lr
 1267              	.LVL122:
 1268              	.L106:
 1269              	.LBB117:
 1270              	.LBB118:
 1271              		.loc 2 195 0
 1272              		.syntax unified
 1273              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1274 0006 4FF05003 			mov r3, #80												
 1275 000a 83F31188 		msr basepri, r3											
 1276 000e BFF36F8F 		isb														
 1277 0012 BFF34F8F 		dsb														
 1278              	
 1279              	@ 0 "" 2
 1280              	.LVL123:
 1281              		.thumb
 1282              		.syntax unified
 1283              	.L105:
 1284 0016 FEE7     		b	.L105
 1285              	.LBE118:
 1286              	.LBE117:
 1287              		.cfi_endproc
 1288              	.LFE10:
 1290              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1291              		.align	1
 1292              		.global	xTimerGetExpiryTime
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1296              		.fpu fpv4-sp-d16
 1298              	xTimerGetExpiryTime:
 1299              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1300              		.loc 1 443 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305              	.LVL124:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1306              		.loc 1 447 0
 1307 0000 08B1     		cbz	r0, .L110
 1308              	.LVL125:
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc97QTn8.s 			page 46


 1309              		.loc 1 450 0
 1310 0002 4068     		ldr	r0, [r0, #4]
 1311              	.LVL126:
 1312 0004 7047     		bx	lr
 1313              	.LVL127:
 1314              	.L110:
 1315              	.LBB119:
 1316              	.LBB120:
 1317              		.loc 2 195 0
 1318              		.syntax unified
 1319              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1320 0006 4FF05003 			mov r3, #80												
 1321 000a 83F31188 		msr basepri, r3											
 1322 000e BFF36F8F 		isb														
 1323 0012 BFF34F8F 		dsb														
 1324              	
 1325              	@ 0 "" 2
 1326              	.LVL128:
 1327              		.thumb
 1328              		.syntax unified
 1329              	.L109:
 1330 0016 FEE7     		b	.L109
 1331              	.LBE120:
 1332              	.LBE119:
 1333              		.cfi_endproc
 1334              	.LFE11:
 1336              		.section	.text.pcTimerGetName,"ax",%progbits
 1337              		.align	1
 1338              		.global	pcTimerGetName
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv4-sp-d16
 1344              	pcTimerGetName:
 1345              	.LFB12:
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1346              		.loc 1 454 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351              	.LVL129:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1352              		.loc 1 457 0
 1353 0000 08B1     		cbz	r0, .L114
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1354              		.loc 1 459 0
 1355 0002 0068     		ldr	r0, [r0]
 1356              	.LVL130:
 1357 0004 7047     		bx	lr
 1358              	.LVL131:
 1359              	.L114:
 1360              	.LBB121:
 1361              	.LBB122:
 1362              		.loc 2 195 0
 1363              		.syntax unified
 1364              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/cc97QTn8.s 			page 47


 1365 0006 4FF05003 			mov r3, #80												
 1366 000a 83F31188 		msr basepri, r3											
 1367 000e BFF36F8F 		isb														
 1368 0012 BFF34F8F 		dsb														
 1369              	
 1370              	@ 0 "" 2
 1371              	.LVL132:
 1372              		.thumb
 1373              		.syntax unified
 1374              	.L113:
 1375 0016 FEE7     		b	.L113
 1376              	.LBE122:
 1377              	.LBE121:
 1378              		.cfi_endproc
 1379              	.LFE12:
 1381              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1382              		.align	1
 1383              		.global	xTimerIsTimerActive
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv4-sp-d16
 1389              	xTimerIsTimerActive:
 1390              	.LFB22:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1391              		.loc 1 946 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              	.LVL133:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1396              		.loc 1 950 0
 1397 0000 40B9     		cbnz	r0, .L116
 1398              	.LBB123:
 1399              	.LBB124:
 1400              		.loc 2 195 0
 1401              		.syntax unified
 1402              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1403 0002 4FF05003 			mov r3, #80												
 1404 0006 83F31188 		msr basepri, r3											
 1405 000a BFF36F8F 		isb														
 1406 000e BFF34F8F 		dsb														
 1407              	
 1408              	@ 0 "" 2
 1409              	.LVL134:
 1410              		.thumb
 1411              		.syntax unified
 1412              	.L117:
 1413 0012 FEE7     		b	.L117
 1414              	.L116:
 1415              	.LBE124:
ARM GAS  /tmp/cc97QTn8.s 			page 48


 1416              	.LBE123:
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1417              		.loc 1 946 0
 1418 0014 10B5     		push	{r4, lr}
 1419              	.LCFI24:
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 4, -8
 1422              		.cfi_offset 14, -4
 1423 0016 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1424              		.loc 1 953 0
 1425 0018 FFF7FEFF 		bl	vPortEnterCritical
 1426              	.LVL135:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1427              		.loc 1 958 0
 1428 001c 6469     		ldr	r4, [r4, #20]
 1429              	.LVL136:
 1430 001e 0034     		adds	r4, r4, #0
 1431 0020 18BF     		it	ne
 1432 0022 0124     		movne	r4, #1
 1433              	.LVL137:
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1434              		.loc 1 960 0
 1435 0024 FFF7FEFF 		bl	vPortExitCritical
 1436              	.LVL138:
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1437              		.loc 1 963 0
 1438 0028 2046     		mov	r0, r4
 1439 002a 10BD     		pop	{r4, pc}
 1440              		.cfi_endproc
 1441              	.LFE22:
 1443              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1444              		.align	1
 1445              		.global	pvTimerGetTimerID
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv4-sp-d16
 1451              	pvTimerGetTimerID:
 1452              	.LFB23:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1453              		.loc 1 967 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc97QTn8.s 			page 49


 1457              	.LVL139:
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1458              		.loc 1 971 0
 1459 0000 40B9     		cbnz	r0, .L121
 1460              	.LBB125:
 1461              	.LBB126:
 1462              		.loc 2 195 0
 1463              		.syntax unified
 1464              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1465 0002 4FF05003 			mov r3, #80												
 1466 0006 83F31188 		msr basepri, r3											
 1467 000a BFF36F8F 		isb														
 1468 000e BFF34F8F 		dsb														
 1469              	
 1470              	@ 0 "" 2
 1471              	.LVL140:
 1472              		.thumb
 1473              		.syntax unified
 1474              	.L122:
 1475 0012 FEE7     		b	.L122
 1476              	.L121:
 1477              	.LBE126:
 1478              	.LBE125:
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1479              		.loc 1 967 0
 1480 0014 10B5     		push	{r4, lr}
 1481              	.LCFI25:
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 4, -8
 1484              		.cfi_offset 14, -4
 1485 0016 0446     		mov	r4, r0
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1486              		.loc 1 973 0
 1487 0018 FFF7FEFF 		bl	vPortEnterCritical
 1488              	.LVL141:
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1489              		.loc 1 975 0
 1490 001c 246A     		ldr	r4, [r4, #32]
 1491              	.LVL142:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1492              		.loc 1 977 0
 1493 001e FFF7FEFF 		bl	vPortExitCritical
 1494              	.LVL143:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1495              		.loc 1 980 0
 1496 0022 2046     		mov	r0, r4
 1497 0024 10BD     		pop	{r4, pc}
 1498              		.cfi_endproc
 1499              	.LFE23:
ARM GAS  /tmp/cc97QTn8.s 			page 50


 1501              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1502              		.align	1
 1503              		.global	vTimerSetTimerID
 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1507              		.fpu fpv4-sp-d16
 1509              	vTimerSetTimerID:
 1510              	.LFB24:
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1511              		.loc 1 984 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              	.LVL144:
 1516 0000 38B5     		push	{r3, r4, r5, lr}
 1517              	.LCFI26:
 1518              		.cfi_def_cfa_offset 16
 1519              		.cfi_offset 3, -16
 1520              		.cfi_offset 4, -12
 1521              		.cfi_offset 5, -8
 1522              		.cfi_offset 14, -4
 1523              	.LVL145:
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1524              		.loc 1 987 0
 1525 0002 40B9     		cbnz	r0, .L126
 1526              	.LBB127:
 1527              	.LBB128:
 1528              		.loc 2 195 0
 1529              		.syntax unified
 1530              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1531 0004 4FF05003 			mov r3, #80												
 1532 0008 83F31188 		msr basepri, r3											
 1533 000c BFF36F8F 		isb														
 1534 0010 BFF34F8F 		dsb														
 1535              	
 1536              	@ 0 "" 2
 1537              	.LVL146:
 1538              		.thumb
 1539              		.syntax unified
 1540              	.L127:
 1541 0014 FEE7     		b	.L127
 1542              	.L126:
 1543 0016 0446     		mov	r4, r0
 1544 0018 0D46     		mov	r5, r1
 1545              	.LBE128:
 1546              	.LBE127:
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1547              		.loc 1 989 0
 1548 001a FFF7FEFF 		bl	vPortEnterCritical
 1549              	.LVL147:
ARM GAS  /tmp/cc97QTn8.s 			page 51


 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1550              		.loc 1 991 0
 1551 001e 2562     		str	r5, [r4, #32]
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1552              		.loc 1 993 0
 1553 0020 FFF7FEFF 		bl	vPortExitCritical
 1554              	.LVL148:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1555              		.loc 1 994 0
 1556 0024 38BD     		pop	{r3, r4, r5, pc}
 1557              		.cfi_endproc
 1558              	.LFE24:
 1560              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1561              		.align	1
 1562              		.global	xTimerPendFunctionCallFromISR
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1566              		.fpu fpv4-sp-d16
 1568              	xTimerPendFunctionCallFromISR:
 1569              	.LFB25:
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1570              		.loc 1 1000 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 16
 1573              		@ frame_needed = 0, uses_anonymous_args = 0
 1574              	.LVL149:
 1575 0000 10B5     		push	{r4, lr}
 1576              	.LCFI27:
 1577              		.cfi_def_cfa_offset 8
 1578              		.cfi_offset 4, -8
 1579              		.cfi_offset 14, -4
 1580 0002 84B0     		sub	sp, sp, #16
 1581              	.LCFI28:
 1582              		.cfi_def_cfa_offset 24
 1583 0004 1C46     		mov	r4, r3
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1584              		.loc 1 1006 0
 1585 0006 6FF00103 		mvn	r3, #1
 1586              	.LVL150:
 1587 000a 0093     		str	r3, [sp]
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1588              		.loc 1 1007 0
 1589 000c 0190     		str	r0, [sp, #4]
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
ARM GAS  /tmp/cc97QTn8.s 			page 52


 1590              		.loc 1 1008 0
 1591 000e 0291     		str	r1, [sp, #8]
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1592              		.loc 1 1009 0
 1593 0010 0392     		str	r2, [sp, #12]
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1594              		.loc 1 1011 0
 1595 0012 0023     		movs	r3, #0
 1596 0014 2246     		mov	r2, r4
 1597              	.LVL151:
 1598 0016 6946     		mov	r1, sp
 1599              	.LVL152:
 1600 0018 0248     		ldr	r0, .L131
 1601              	.LVL153:
 1602 001a 0068     		ldr	r0, [r0]
 1603 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1604              	.LVL154:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1605              		.loc 1 1016 0
 1606 0020 04B0     		add	sp, sp, #16
 1607              	.LCFI29:
 1608              		.cfi_def_cfa_offset 8
 1609              		@ sp needed
 1610 0022 10BD     		pop	{r4, pc}
 1611              	.LVL155:
 1612              	.L132:
 1613              		.align	2
 1614              	.L131:
 1615 0024 00000000 		.word	.LANCHOR2
 1616              		.cfi_endproc
 1617              	.LFE25:
 1619              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1620              		.align	1
 1621              		.global	xTimerPendFunctionCall
 1622              		.syntax unified
 1623              		.thumb
 1624              		.thumb_func
 1625              		.fpu fpv4-sp-d16
 1627              	xTimerPendFunctionCall:
 1628              	.LFB26:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1629              		.loc 1 1024 0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 16
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc97QTn8.s 			page 53


 1633              	.LVL156:
 1634 0000 30B5     		push	{r4, r5, lr}
 1635              	.LCFI30:
 1636              		.cfi_def_cfa_offset 12
 1637              		.cfi_offset 4, -12
 1638              		.cfi_offset 5, -8
 1639              		.cfi_offset 14, -4
 1640 0002 85B0     		sub	sp, sp, #20
 1641              	.LCFI31:
 1642              		.cfi_def_cfa_offset 32
 1643 0004 1446     		mov	r4, r2
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1644              		.loc 1 1031 0
 1645 0006 0D4A     		ldr	r2, .L137
 1646              	.LVL157:
 1647 0008 1568     		ldr	r5, [r2]
 1648 000a 45B9     		cbnz	r5, .L134
 1649              	.LBB129:
 1650              	.LBB130:
 1651              		.loc 2 195 0
 1652              		.syntax unified
 1653              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1654 000c 4FF05003 			mov r3, #80												
 1655 0010 83F31188 		msr basepri, r3											
 1656 0014 BFF36F8F 		isb														
 1657 0018 BFF34F8F 		dsb														
 1658              	
 1659              	@ 0 "" 2
 1660              	.LVL158:
 1661              		.thumb
 1662              		.syntax unified
 1663              	.L135:
 1664 001c FEE7     		b	.L135
 1665              	.LVL159:
 1666              	.L134:
 1667 001e 1A46     		mov	r2, r3
 1668 0020 0346     		mov	r3, r0
 1669              	.LVL160:
 1670              	.LBE130:
 1671              	.LBE129:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1672              		.loc 1 1035 0
 1673 0022 4FF0FF30 		mov	r0, #-1
 1674              	.LVL161:
 1675 0026 0090     		str	r0, [sp]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1676              		.loc 1 1036 0
 1677 0028 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cc97QTn8.s 			page 54


1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1678              		.loc 1 1037 0
 1679 002a 0291     		str	r1, [sp, #8]
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1680              		.loc 1 1038 0
 1681 002c 0394     		str	r4, [sp, #12]
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1682              		.loc 1 1040 0
 1683 002e 0023     		movs	r3, #0
 1684              	.LVL162:
 1685 0030 6946     		mov	r1, sp
 1686              	.LVL163:
 1687 0032 2846     		mov	r0, r5
 1688 0034 FFF7FEFF 		bl	xQueueGenericSend
 1689              	.LVL164:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1690              		.loc 1 1045 0
 1691 0038 05B0     		add	sp, sp, #20
 1692              	.LCFI32:
 1693              		.cfi_def_cfa_offset 12
 1694              		@ sp needed
 1695 003a 30BD     		pop	{r4, r5, pc}
 1696              	.LVL165:
 1697              	.L138:
 1698              		.align	2
 1699              	.L137:
 1700 003c 00000000 		.word	.LANCHOR2
 1701              		.cfi_endproc
 1702              	.LFE26:
 1704              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1705              		.align	1
 1706              		.global	uxTimerGetTimerNumber
 1707              		.syntax unified
 1708              		.thumb
 1709              		.thumb_func
 1710              		.fpu fpv4-sp-d16
 1712              	uxTimerGetTimerNumber:
 1713              	.LFB27:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1714              		.loc 1 1053 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718              		@ link register save eliminated.
 1719              	.LVL166:
ARM GAS  /tmp/cc97QTn8.s 			page 55


1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1720              		.loc 1 1055 0
 1721 0000 806A     		ldr	r0, [r0, #40]
 1722              	.LVL167:
 1723 0002 7047     		bx	lr
 1724              		.cfi_endproc
 1725              	.LFE27:
 1727              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1728              		.align	1
 1729              		.global	vTimerSetTimerNumber
 1730              		.syntax unified
 1731              		.thumb
 1732              		.thumb_func
 1733              		.fpu fpv4-sp-d16
 1735              	vTimerSetTimerNumber:
 1736              	.LFB28:
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1737              		.loc 1 1063 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 0
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 1741              		@ link register save eliminated.
 1742              	.LVL168:
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1743              		.loc 1 1064 0
 1744 0000 8162     		str	r1, [r0, #40]
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1745              		.loc 1 1065 0
 1746 0002 7047     		bx	lr
 1747              		.cfi_endproc
 1748              	.LFE28:
 1750              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1751              		.align	2
 1752              		.set	.LANCHOR1,. + 0
 1755              	pxCurrentTimerList:
 1756 0000 00000000 		.space	4
 1757              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1758              		.align	2
 1759              		.set	.LANCHOR0,. + 0
 1762              	pxOverflowTimerList:
 1763 0000 00000000 		.space	4
 1764              		.section	.bss.ucStaticTimerQueueStorage.6772,"aw",%nobits
 1765              		.align	2
 1766              		.set	.LANCHOR6,. + 0
 1769              	ucStaticTimerQueueStorage.6772:
 1770 0000 00000000 		.space	160
 1770      00000000 
 1770      00000000 
 1770      00000000 
ARM GAS  /tmp/cc97QTn8.s 			page 56


 1770      00000000 
 1771              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1772              		.align	2
 1773              		.set	.LANCHOR3,. + 0
 1776              	xActiveTimerList1:
 1777 0000 00000000 		.space	20
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1778              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1779              		.align	2
 1780              		.set	.LANCHOR4,. + 0
 1783              	xActiveTimerList2:
 1784 0000 00000000 		.space	20
 1784      00000000 
 1784      00000000 
 1784      00000000 
 1784      00000000 
 1785              		.section	.bss.xLastTime.6721,"aw",%nobits
 1786              		.align	2
 1787              		.set	.LANCHOR8,. + 0
 1790              	xLastTime.6721:
 1791 0000 00000000 		.space	4
 1792              		.section	.bss.xStaticTimerQueue.6771,"aw",%nobits
 1793              		.align	2
 1794              		.set	.LANCHOR5,. + 0
 1797              	xStaticTimerQueue.6771:
 1798 0000 00000000 		.space	80
 1798      00000000 
 1798      00000000 
 1798      00000000 
 1798      00000000 
 1799              		.section	.bss.xTimerQueue,"aw",%nobits
 1800              		.align	2
 1801              		.set	.LANCHOR2,. + 0
 1804              	xTimerQueue:
 1805 0000 00000000 		.space	4
 1806              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1807              		.align	2
 1808              		.set	.LANCHOR7,. + 0
 1811              	xTimerTaskHandle:
 1812 0000 00000000 		.space	4
 1813              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1814              		.align	2
 1815              	.LC0:
 1816 0000 546D7251 		.ascii	"TmrQ\000"
 1816      00
 1817              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1818              		.align	2
 1819              	.LC1:
 1820 0000 546D7220 		.ascii	"Tmr Svc\000"
 1820      53766300 
 1821              		.text
 1822              	.Letext0:
 1823              		.file 3 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1824              		.file 4 "/usr/include/newlib/machine/_default_types.h"
ARM GAS  /tmp/cc97QTn8.s 			page 57


 1825              		.file 5 "/usr/include/newlib/sys/lock.h"
 1826              		.file 6 "/usr/include/newlib/sys/_types.h"
 1827              		.file 7 "/usr/include/newlib/sys/reent.h"
 1828              		.file 8 "/usr/include/newlib/stdlib.h"
 1829              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 1830              		.file 10 "Inc/FreeRTOSConfig.h"
 1831              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1832              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1833              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1834              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1835              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1836              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cc97QTn8.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/cc97QTn8.s:18     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/cc97QTn8.s:24     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/cc97QTn8.s:103    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/cc97QTn8.s:109    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/cc97QTn8.s:115    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/cc97QTn8.s:191    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/cc97QTn8.s:203    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/cc97QTn8.s:210    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/cc97QTn8.s:293    .text.xTimerCreateTimerTask:0000000000000054 $d
     /tmp/cc97QTn8.s:824    .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/cc97QTn8.s:303    .text.xTimerCreate:0000000000000000 $t
     /tmp/cc97QTn8.s:310    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/cc97QTn8.s:393    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/cc97QTn8.s:400    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/cc97QTn8.s:533    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/cc97QTn8.s:540    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/cc97QTn8.s:647    .text.xTimerGenericCommand:000000000000005c $d
     /tmp/cc97QTn8.s:652    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/cc97QTn8.s:658    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/cc97QTn8.s:811    .text.prvSampleTimeNow:000000000000009c $d
     /tmp/cc97QTn8.s:818    .text.prvTimerTask:0000000000000000 $t
     /tmp/cc97QTn8.s:1075   .text.prvTimerTask:0000000000000118 $d
     /tmp/cc97QTn8.s:1085   .text.prvTimerTask:0000000000000140 $t
     /tmp/cc97QTn8.s:1189   .text.prvTimerTask:00000000000001c0 $d
     /tmp/cc97QTn8.s:1199   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/cc97QTn8.s:1206   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/cc97QTn8.s:1239   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/cc97QTn8.s:1246   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/cc97QTn8.s:1253   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/cc97QTn8.s:1291   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/cc97QTn8.s:1298   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/cc97QTn8.s:1337   .text.pcTimerGetName:0000000000000000 $t
     /tmp/cc97QTn8.s:1344   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/cc97QTn8.s:1382   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/cc97QTn8.s:1389   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/cc97QTn8.s:1444   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/cc97QTn8.s:1451   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/cc97QTn8.s:1502   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/cc97QTn8.s:1509   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/cc97QTn8.s:1561   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/cc97QTn8.s:1568   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/cc97QTn8.s:1615   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/cc97QTn8.s:1620   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/cc97QTn8.s:1627   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/cc97QTn8.s:1700   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/cc97QTn8.s:1705   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/cc97QTn8.s:1712   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/cc97QTn8.s:1728   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/cc97QTn8.s:1735   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/cc97QTn8.s:1751   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/cc97QTn8.s:1755   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/cc97QTn8.s:1758   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/cc97QTn8.s:1762   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/cc97QTn8.s:1765   .bss.ucStaticTimerQueueStorage.6772:0000000000000000 $d
     /tmp/cc97QTn8.s:1769   .bss.ucStaticTimerQueueStorage.6772:0000000000000000 ucStaticTimerQueueStorage.6772
ARM GAS  /tmp/cc97QTn8.s 			page 59


     /tmp/cc97QTn8.s:1772   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/cc97QTn8.s:1776   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/cc97QTn8.s:1779   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/cc97QTn8.s:1783   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/cc97QTn8.s:1786   .bss.xLastTime.6721:0000000000000000 $d
     /tmp/cc97QTn8.s:1790   .bss.xLastTime.6721:0000000000000000 xLastTime.6721
     /tmp/cc97QTn8.s:1793   .bss.xStaticTimerQueue.6771:0000000000000000 $d
     /tmp/cc97QTn8.s:1797   .bss.xStaticTimerQueue.6771:0000000000000000 xStaticTimerQueue.6771
     /tmp/cc97QTn8.s:1800   .bss.xTimerQueue:0000000000000000 $d
     /tmp/cc97QTn8.s:1804   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/cc97QTn8.s:1807   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/cc97QTn8.s:1811   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/cc97QTn8.s:1814   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/cc97QTn8.s:1818   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
xTaskGetTickCount
uxListRemove
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
