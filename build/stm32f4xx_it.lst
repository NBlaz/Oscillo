ARM GAS  /tmp/ccDEl4M6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB134:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** #include "FreeRTOS.h"
  25:Src/stm32f4xx_it.c **** #include "task.h"
  26:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  28:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f4xx_it.c **** 
  30:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  /tmp/ccDEl4M6.s 			page 2


  32:Src/stm32f4xx_it.c **** 
  33:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f4xx_it.c **** 
  35:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f4xx_it.c ****  
  38:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f4xx_it.c **** 
  48:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f4xx_it.c **** 
  53:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  62:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  63:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  64:Src/stm32f4xx_it.c **** 
  65:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  66:Src/stm32f4xx_it.c **** 
  67:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c **** /******************************************************************************/
  70:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  71:Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Src/stm32f4xx_it.c **** /**
  73:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Src/stm32f4xx_it.c ****   */
  75:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  76:Src/stm32f4xx_it.c **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  77:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccDEl4M6.s 			page 3


  33              		.loc 1 83 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE134:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB135:
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c **** /**
  86:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Src/stm32f4xx_it.c ****   */
  88:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  89:Src/stm32f4xx_it.c **** {
  48              		.loc 1 89 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE135:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB136:
  90:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Src/stm32f4xx_it.c **** 
  92:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Src/stm32f4xx_it.c ****   while (1)
  94:Src/stm32f4xx_it.c ****   {
  95:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Src/stm32f4xx_it.c ****   }
  98:Src/stm32f4xx_it.c **** }
  99:Src/stm32f4xx_it.c **** 
 100:Src/stm32f4xx_it.c **** /**
 101:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 102:Src/stm32f4xx_it.c ****   */
 103:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 104:Src/stm32f4xx_it.c **** {
  69              		.loc 1 104 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccDEl4M6.s 			page 4


  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE136:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB137:
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Src/stm32f4xx_it.c ****   while (1)
 109:Src/stm32f4xx_it.c ****   {
 110:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f4xx_it.c ****   }
 113:Src/stm32f4xx_it.c **** }
 114:Src/stm32f4xx_it.c **** 
 115:Src/stm32f4xx_it.c **** /**
 116:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Src/stm32f4xx_it.c ****   */
 118:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 119:Src/stm32f4xx_it.c **** {
  90              		.loc 1 119 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE137:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB138:
 120:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Src/stm32f4xx_it.c **** 
 122:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Src/stm32f4xx_it.c ****   while (1)
 124:Src/stm32f4xx_it.c ****   {
 125:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Src/stm32f4xx_it.c ****   }
ARM GAS  /tmp/ccDEl4M6.s 			page 5


 128:Src/stm32f4xx_it.c **** }
 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c **** /**
 131:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Src/stm32f4xx_it.c ****   */
 133:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 134:Src/stm32f4xx_it.c **** {
 111              		.loc 1 134 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE138:
 122              		.section	.text.DebugMon_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	DebugMon_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	DebugMon_Handler:
 131              	.LFB139:
 135:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Src/stm32f4xx_it.c **** 
 137:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Src/stm32f4xx_it.c ****   while (1)
 139:Src/stm32f4xx_it.c ****   {
 140:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Src/stm32f4xx_it.c ****   }
 143:Src/stm32f4xx_it.c **** }
 144:Src/stm32f4xx_it.c **** 
 145:Src/stm32f4xx_it.c **** /**
 146:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 147:Src/stm32f4xx_it.c ****   */
 148:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 149:Src/stm32f4xx_it.c **** {
 132              		.loc 1 149 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 150:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Src/stm32f4xx_it.c **** }
 137              		.loc 1 156 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE139:
ARM GAS  /tmp/ccDEl4M6.s 			page 6


 142              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 143              		.align	1
 144              		.global	TIM1_UP_TIM10_IRQHandler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	TIM1_UP_TIM10_IRQHandler:
 151              	.LFB140:
 157:Src/stm32f4xx_it.c **** 
 158:Src/stm32f4xx_it.c **** /******************************************************************************/
 159:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 160:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 161:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 162:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 163:Src/stm32f4xx_it.c **** /******************************************************************************/
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 167:Src/stm32f4xx_it.c ****   */
 168:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 169:Src/stm32f4xx_it.c **** {
 152              		.loc 1 169 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 08B5     		push	{r3, lr}
 157              	.LCFI0:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 173:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 161              		.loc 1 173 0
 162 0002 0248     		ldr	r0, .L13
 163 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 164              	.LVL0:
 174:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 175:Src/stm32f4xx_it.c **** 
 176:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 177:Src/stm32f4xx_it.c **** }
 165              		.loc 1 177 0
 166 0008 08BD     		pop	{r3, pc}
 167              	.L14:
 168 000a 00BF     		.align	2
 169              	.L13:
 170 000c 00000000 		.word	htim1
 171              		.cfi_endproc
 172              	.LFE140:
 174              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 175              		.align	1
 176              		.global	DMA2_Stream0_IRQHandler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
ARM GAS  /tmp/ccDEl4M6.s 			page 7


 180              		.fpu fpv4-sp-d16
 182              	DMA2_Stream0_IRQHandler:
 183              	.LFB141:
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c **** /**
 180:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 181:Src/stm32f4xx_it.c ****   */
 182:Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 183:Src/stm32f4xx_it.c **** {
 184              		.loc 1 183 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 184:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 185:Src/stm32f4xx_it.c **** 
 186:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 187:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 193              		.loc 1 187 0
 194 0002 0248     		ldr	r0, .L17
 195 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 196              	.LVL1:
 188:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 189:Src/stm32f4xx_it.c **** 
 190:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 191:Src/stm32f4xx_it.c **** }
 197              		.loc 1 191 0
 198 0008 08BD     		pop	{r3, pc}
 199              	.L18:
 200 000a 00BF     		.align	2
 201              	.L17:
 202 000c 00000000 		.word	hdma_spi1_rx
 203              		.cfi_endproc
 204              	.LFE141:
 206              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 207              		.align	1
 208              		.global	DMA2_Stream3_IRQHandler
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	DMA2_Stream3_IRQHandler:
 215              	.LFB142:
 192:Src/stm32f4xx_it.c **** 
 193:Src/stm32f4xx_it.c **** /**
 194:Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream3 global interrupt.
 195:Src/stm32f4xx_it.c ****   */
 196:Src/stm32f4xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 197:Src/stm32f4xx_it.c **** {
 216              		.loc 1 197 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDEl4M6.s 			page 8


 220 0000 08B5     		push	{r3, lr}
 221              	.LCFI2:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
 198:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 199:Src/stm32f4xx_it.c **** 
 200:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 201:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 225              		.loc 1 201 0
 226 0002 0248     		ldr	r0, .L21
 227 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 228              	.LVL2:
 202:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */
 203:Src/stm32f4xx_it.c **** 
 204:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 1 */
 205:Src/stm32f4xx_it.c **** }
 229              		.loc 1 205 0
 230 0008 08BD     		pop	{r3, pc}
 231              	.L22:
 232 000a 00BF     		.align	2
 233              	.L21:
 234 000c 00000000 		.word	hdma_spi1_tx
 235              		.cfi_endproc
 236              	.LFE142:
 238              		.text
 239              	.Letext0:
 240              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 241              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 242              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 243              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 244              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 245              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 246              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 247              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 248              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 249              		.file 11 "Src/tm_stm32f4_ili9341/tm_stm32f4_fonts.h"
ARM GAS  /tmp/ccDEl4M6.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccDEl4M6.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccDEl4M6.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccDEl4M6.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccDEl4M6.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccDEl4M6.s:60     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccDEl4M6.s:67     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccDEl4M6.s:81     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccDEl4M6.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccDEl4M6.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccDEl4M6.s:109    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccDEl4M6.s:123    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccDEl4M6.s:130    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccDEl4M6.s:143    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccDEl4M6.s:150    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccDEl4M6.s:170    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/ccDEl4M6.s:175    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccDEl4M6.s:182    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccDEl4M6.s:202    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccDEl4M6.s:207    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
     /tmp/ccDEl4M6.s:214    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
     /tmp/ccDEl4M6.s:234    .text.DMA2_Stream3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim1
HAL_DMA_IRQHandler
hdma_spi1_rx
hdma_spi1_tx
