ARM GAS  /tmp/ccGXueQi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_timebase_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_InitTick,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_InitTick
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_InitTick:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f4xx_hal_timebase_tim.c"
   1:Src/stm32f4xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_hal_timebase_tim.c **** /**
   3:Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Src/stm32f4xx_hal_timebase_tim.c ****   * @file    stm32f4xx_hal_timebase_TIM.c 
   5:Src/stm32f4xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Src/stm32f4xx_hal_timebase_tim.c ****   * @attention
   8:Src/stm32f4xx_hal_timebase_tim.c ****   *
   9:Src/stm32f4xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f4xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_hal_timebase_tim.c ****   *
  12:Src/stm32f4xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_hal_timebase_tim.c ****   *
  17:Src/stm32f4xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Src/stm32f4xx_hal_timebase_tim.c ****   */
  19:Src/stm32f4xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_hal_timebase_tim.c **** 
  21:Src/stm32f4xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_hal_timebase_tim.c **** #include "stm32f4xx_hal.h"
  23:Src/stm32f4xx_hal_timebase_tim.c **** #include "stm32f4xx_hal_tim.h"
  24:Src/stm32f4xx_hal_timebase_tim.c ****  
  25:Src/stm32f4xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Src/stm32f4xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Src/stm32f4xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Src/stm32f4xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Src/stm32f4xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim1; 
  30:Src/stm32f4xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  31:Src/stm32f4xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccGXueQi.s 			page 2


  32:Src/stm32f4xx_hal_timebase_tim.c **** 
  33:Src/stm32f4xx_hal_timebase_tim.c **** /**
  34:Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM1 as a time base source. 
  35:Src/stm32f4xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  36:Src/stm32f4xx_hal_timebase_tim.c ****   *         Tick interrupt priority. 
  37:Src/stm32f4xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Src/stm32f4xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  39:Src/stm32f4xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Src/stm32f4xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Src/stm32f4xx_hal_timebase_tim.c ****   */
  42:Src/stm32f4xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Src/stm32f4xx_hal_timebase_tim.c **** {
  28              		.loc 1 43 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 88B0     		sub	sp, sp, #32
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
  41              	.LVL1:
  44:Src/stm32f4xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  45:Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  46:Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  47:Src/stm32f4xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  48:Src/stm32f4xx_hal_timebase_tim.c ****   
  49:Src/stm32f4xx_hal_timebase_tim.c ****   /*Configure the TIM1 IRQ priority */
  50:Src/stm32f4xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TickPriority ,0); 
  42              		.loc 1 50 0
  43 0004 0022     		movs	r2, #0
  44 0006 0146     		mov	r1, r0
  45 0008 1920     		movs	r0, #25
  46              	.LVL2:
  47 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  48              	.LVL3:
  51:Src/stm32f4xx_hal_timebase_tim.c ****   
  52:Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable the TIM1 global Interrupt */
  53:Src/stm32f4xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn); 
  49              		.loc 1 53 0
  50 000e 1920     		movs	r0, #25
  51 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  52              	.LVL4:
  53              	.LBB2:
  54:Src/stm32f4xx_hal_timebase_tim.c ****   
  55:Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable TIM1 clock */
  56:Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  54              		.loc 1 56 0
  55 0014 0024     		movs	r4, #0
  56 0016 0194     		str	r4, [sp, #4]
  57 0018 144B     		ldr	r3, .L6
  58 001a 5A6C     		ldr	r2, [r3, #68]
  59 001c 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccGXueQi.s 			page 3


  60 0020 5A64     		str	r2, [r3, #68]
  61 0022 5B6C     		ldr	r3, [r3, #68]
  62 0024 03F00103 		and	r3, r3, #1
  63 0028 0193     		str	r3, [sp, #4]
  64 002a 019B     		ldr	r3, [sp, #4]
  65              	.LBE2:
  57:Src/stm32f4xx_hal_timebase_tim.c ****   
  58:Src/stm32f4xx_hal_timebase_tim.c ****   /* Get clock configuration */
  59:Src/stm32f4xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  66              		.loc 1 59 0
  67 002c 02A9     		add	r1, sp, #8
  68 002e 03A8     		add	r0, sp, #12
  69 0030 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  70              	.LVL5:
  60:Src/stm32f4xx_hal_timebase_tim.c ****   
  61:Src/stm32f4xx_hal_timebase_tim.c ****   /* Compute TIM1 clock */
  62:Src/stm32f4xx_hal_timebase_tim.c ****   uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
  71              		.loc 1 62 0
  72 0034 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  73              	.LVL6:
  63:Src/stm32f4xx_hal_timebase_tim.c ****    
  64:Src/stm32f4xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  65:Src/stm32f4xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  66:Src/stm32f4xx_hal_timebase_tim.c ****   
  67:Src/stm32f4xx_hal_timebase_tim.c ****   /* Initialize TIM1 */
  68:Src/stm32f4xx_hal_timebase_tim.c ****   htim1.Instance = TIM1;
  74              		.loc 1 68 0
  75 0038 0D4B     		ldr	r3, .L6+4
  76 003a 0E4A     		ldr	r2, .L6+8
  77 003c 1A60     		str	r2, [r3]
  69:Src/stm32f4xx_hal_timebase_tim.c ****   
  70:Src/stm32f4xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  71:Src/stm32f4xx_hal_timebase_tim.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  72:Src/stm32f4xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  73:Src/stm32f4xx_hal_timebase_tim.c ****   + ClockDivision = 0
  74:Src/stm32f4xx_hal_timebase_tim.c ****   + Counter direction = Up
  75:Src/stm32f4xx_hal_timebase_tim.c ****   */
  76:Src/stm32f4xx_hal_timebase_tim.c ****   htim1.Init.Period = (1000000 / 1000) - 1;
  78              		.loc 1 76 0
  79 003e 40F2E732 		movw	r2, #999
  80 0042 DA60     		str	r2, [r3, #12]
  62:Src/stm32f4xx_hal_timebase_tim.c ****    
  81              		.loc 1 62 0
  82 0044 4000     		lsls	r0, r0, #1
  83              	.LVL7:
  65:Src/stm32f4xx_hal_timebase_tim.c ****   
  84              		.loc 1 65 0
  85 0046 0C4A     		ldr	r2, .L6+12
  86 0048 A2FB0020 		umull	r2, r0, r2, r0
  87              	.LVL8:
  88 004c 800C     		lsrs	r0, r0, #18
  89 004e 0138     		subs	r0, r0, #1
  77:Src/stm32f4xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
  90              		.loc 1 77 0
  91 0050 5860     		str	r0, [r3, #4]
  78:Src/stm32f4xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
  92              		.loc 1 78 0
ARM GAS  /tmp/ccGXueQi.s 			page 4


  93 0052 1C61     		str	r4, [r3, #16]
  79:Src/stm32f4xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  94              		.loc 1 79 0
  95 0054 9C60     		str	r4, [r3, #8]
  80:Src/stm32f4xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
  96              		.loc 1 80 0
  97 0056 1846     		mov	r0, r3
  98 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
  99              	.LVL9:
 100 005c 10B1     		cbz	r0, .L5
  81:Src/stm32f4xx_hal_timebase_tim.c ****   {
  82:Src/stm32f4xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  83:Src/stm32f4xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim1);
  84:Src/stm32f4xx_hal_timebase_tim.c ****   }
  85:Src/stm32f4xx_hal_timebase_tim.c ****   
  86:Src/stm32f4xx_hal_timebase_tim.c ****   /* Return function status */
  87:Src/stm32f4xx_hal_timebase_tim.c ****   return HAL_ERROR;
 101              		.loc 1 87 0
 102 005e 0120     		movs	r0, #1
 103              	.L2:
  88:Src/stm32f4xx_hal_timebase_tim.c **** }
 104              		.loc 1 88 0
 105 0060 08B0     		add	sp, sp, #32
 106              	.LCFI2:
 107              		.cfi_remember_state
 108              		.cfi_def_cfa_offset 8
 109              		@ sp needed
 110 0062 10BD     		pop	{r4, pc}
 111              	.L5:
 112              	.LCFI3:
 113              		.cfi_restore_state
  83:Src/stm32f4xx_hal_timebase_tim.c ****   }
 114              		.loc 1 83 0
 115 0064 0248     		ldr	r0, .L6+4
 116 0066 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 117              	.LVL10:
 118 006a F9E7     		b	.L2
 119              	.L7:
 120              		.align	2
 121              	.L6:
 122 006c 00380240 		.word	1073887232
 123 0070 00000000 		.word	htim1
 124 0074 00000140 		.word	1073807360
 125 0078 83DE1B43 		.word	1125899907
 126              		.cfi_endproc
 127              	.LFE130:
 129              		.section	.text.HAL_SuspendTick,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_SuspendTick
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	HAL_SuspendTick:
 138              	.LFB131:
  89:Src/stm32f4xx_hal_timebase_tim.c **** 
  90:Src/stm32f4xx_hal_timebase_tim.c **** /**
ARM GAS  /tmp/ccGXueQi.s 			page 5


  91:Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  92:Src/stm32f4xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
  93:Src/stm32f4xx_hal_timebase_tim.c ****   * @param  None
  94:Src/stm32f4xx_hal_timebase_tim.c ****   * @retval None
  95:Src/stm32f4xx_hal_timebase_tim.c ****   */
  96:Src/stm32f4xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  97:Src/stm32f4xx_hal_timebase_tim.c **** {
 139              		.loc 1 97 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
  98:Src/stm32f4xx_hal_timebase_tim.c ****   /* Disable TIM1 update Interrupt */
  99:Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);                                                  
 144              		.loc 1 99 0
 145 0000 034B     		ldr	r3, .L9
 146 0002 1A68     		ldr	r2, [r3]
 147 0004 D368     		ldr	r3, [r2, #12]
 148 0006 23F00103 		bic	r3, r3, #1
 149 000a D360     		str	r3, [r2, #12]
 100:Src/stm32f4xx_hal_timebase_tim.c **** }
 150              		.loc 1 100 0
 151 000c 7047     		bx	lr
 152              	.L10:
 153 000e 00BF     		.align	2
 154              	.L9:
 155 0010 00000000 		.word	htim1
 156              		.cfi_endproc
 157              	.LFE131:
 159              		.section	.text.HAL_ResumeTick,"ax",%progbits
 160              		.align	1
 161              		.global	HAL_ResumeTick
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	HAL_ResumeTick:
 168              	.LFB132:
 101:Src/stm32f4xx_hal_timebase_tim.c **** 
 102:Src/stm32f4xx_hal_timebase_tim.c **** /**
 103:Src/stm32f4xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 104:Src/stm32f4xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 105:Src/stm32f4xx_hal_timebase_tim.c ****   * @param  None
 106:Src/stm32f4xx_hal_timebase_tim.c ****   * @retval None
 107:Src/stm32f4xx_hal_timebase_tim.c ****   */
 108:Src/stm32f4xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 109:Src/stm32f4xx_hal_timebase_tim.c **** {
 169              		.loc 1 109 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 110:Src/stm32f4xx_hal_timebase_tim.c ****   /* Enable TIM1 Update interrupt */
 111:Src/stm32f4xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 174              		.loc 1 111 0
 175 0000 034B     		ldr	r3, .L12
 176 0002 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccGXueQi.s 			page 6


 177 0004 D368     		ldr	r3, [r2, #12]
 178 0006 43F00103 		orr	r3, r3, #1
 179 000a D360     		str	r3, [r2, #12]
 112:Src/stm32f4xx_hal_timebase_tim.c **** }
 180              		.loc 1 112 0
 181 000c 7047     		bx	lr
 182              	.L13:
 183 000e 00BF     		.align	2
 184              	.L12:
 185 0010 00000000 		.word	htim1
 186              		.cfi_endproc
 187              	.LFE132:
 189              		.comm	htim1,64,4
 190              		.text
 191              	.Letext0:
 192              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 193              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 194              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 195              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 196              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 197              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 198              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 199              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 200              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 201              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 202              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccGXueQi.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_tim.c
     /tmp/ccGXueQi.s:18     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccGXueQi.s:25     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccGXueQi.s:122    .text.HAL_InitTick:000000000000006c $d
                            *COM*:0000000000000040 htim1
     /tmp/ccGXueQi.s:130    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccGXueQi.s:137    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccGXueQi.s:155    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/ccGXueQi.s:160    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccGXueQi.s:167    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccGXueQi.s:185    .text.HAL_ResumeTick:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
